recommend = matrix(NA,nrow(tpr),ncol(tpr))
rownames(recommend) = rownames(fdr.schema)
colnames(recommend) = gsub(' effect','',names.recommend)
for(i in 1:ncol(tpr0)){
# FDR < 0.05 & TPR > 0.5, we recommend it
ord = tpr0[,i][which(fdr.schema[,i] %in% c('***'))]
qt = quantile(ord, probs = c(0, 0.25, 0.5, 0.75, 1))[2]
names = names(
tpr0[,i][which(fdr.schema[,i] %in% c('***'))][names(ord[ord>= qt])]
)
# names = names(tpr0[,i][which(fdr.schema[,i] =='***')][order(-tpr0[,i][which(fdr.schema[,i] =='***')])[1:3]])
# FDR < 0.1 & TPR > 0.75 of all avaiable methods, we recommend it
ord = tpr0[,i][which(fdr.schema[,i] %in% c('***','**'))]
qt = quantile(ord, probs = c(0, 0.25, 0.5, 0.75, 1))[4]
names2 = names(
tpr0[,i][which(fdr.schema[,i] %in% c('***','**'))][names(ord[ord>= qt])]
)
names2 = names2[!(names2 %in% names)]
recommend[rownames(recommend) %in% names,i] = '***'
recommend[rownames(recommend) %in% names2,i] = '**'
}
recommend[is.na(recommend)] = ' '
recommend1 = recommend
colnames(recommend1) = gsub('.*\\_','',colnames(recommend1))
if(recommendation){
kbl(recommend1, escape = F, align = 'c') %>%
kable_classic_2(full_width = F) %>%
add_header_above(c("Signal density" = 1, "5%" =3,"10%" = 3,"20%" =3,"5%" =3,"10%" = 3,"20%" =3), bold = T) %>%
add_header_above(c("Differential mode of taxa" = 1, "Abundant" =9,"Rare" = 9), bold = T) %>%
column_spec(2, background= count.ct(data = recommend1,1)) %>%
column_spec(3, background= count.ct(data = recommend1,2)) %>%
column_spec(4, background= count.ct(data = recommend1,3)) %>%
column_spec(5, background= count.ct(data = recommend1,4)) %>%
column_spec(6, background= count.ct(data = recommend1,5)) %>%
column_spec(7, background= count.ct(data = recommend1,6)) %>%
column_spec(8, background= count.ct(data = recommend1,7)) %>%
column_spec(9, background= count.ct(data = recommend1,8)) %>%
column_spec(10, background= count.ct(data = recommend1,9)) %>%
column_spec(11, background= count.ct(data = recommend1,10)) %>%
column_spec(12, background= count.ct(data = recommend1,11)) %>%
column_spec(13, background= count.ct(data = recommend1,12)) %>%
column_spec(14, background= count.ct(data = recommend1,13)) %>%
column_spec(15, background= count.ct(data = recommend1,14)) %>%
column_spec(16, background= count.ct(data = recommend1,15)) %>%
column_spec(17, background= count.ct(data = recommend1,16)) %>%
column_spec(18, background= count.ct(data = recommend1,17)) %>%
column_spec(19, background= count.ct(data = recommend1,18)) %>%
save_kable(file = paste0(getwd(),'/plot/',filename,covariate.type,'_',type.name,'_Recommendation_kableTable.png'), zoom = 5)
}
## MCC/F1
if(MCC){
MCC = aggregate(value~., data= res.df2 %>% filter(measures =='MCC'& !(methods %in% delete))%>% dplyr::select(name,diff.otu.pcts, diff.otu.modes, methods, value) , function(x)  mean(x[!is.na(x)])) %>%
unite('grp',c('diff.otu.modes','diff.otu.pcts',name)) %>%
spread(c('grp'), value) %>% column_to_rownames('methods')
F1 = aggregate(value~., data= res.df2 %>% filter(measures =='F1'& !(methods %in% delete))%>% dplyr::select(name,diff.otu.pcts, diff.otu.modes, methods, value) , function(x)  mean(x[!is.na(x)])) %>%
unite('grp',c('diff.otu.modes','diff.otu.pcts',name)) %>%
spread(c('grp'), value)%>% column_to_rownames('methods')
MCC1 = MCC[rownames(fdr.schema1),]
F11 = F1[rownames(fdr.schema1),]
# FDR >= 2 stars MCC/F1 top1
recommend2 = matrix(NA,nrow(MCC),ncol(MCC))
rownames(recommend2) = rownames(fdr.schema1)
colnames(recommend2) = colnames(fdr.schema1)
try({
for(i in 1:ncol(MCC1)){
# FDR < 1 & TPR > 0.5, we recommend it
f.FDR = which(fdr.schema1[,i] %in% c('***','**'))
f.MCC = MCC[,i,drop=F][f.FDR,,drop=F]
f.MCC = f.MCC[order(-f.MCC[,1]),,drop =F]
if(nrow(f.MCC)>1){
max.MCC = rownames(f.MCC)[1]#[1:2]
f.F1 = F1[,i,drop=F][f.FDR,,drop=F]
f.F1 = f.F1[order(-f.F1[,1]),,drop =F]
max.F1 = rownames(f.F1)[1]#[1:2]
}else{
max.MCC = rownames(f.MCC)[1]
f.F1 = F1[,i,drop=F][f.FDR,,drop=F]
f.F1 = f.F1[order(-f.F1[,1]),,drop =F]
max.F1 = rownames(f.F1)[1]
}
if(!is.na(max.F1)){
recommend2[max.F1,i] = '***'
}
if(!is.na(max.MCC)){
recommend2[max.MCC,i] = '***'
}
} })
}
tpr$`TPR score` = apply(tpr.rank, 1, function(x) sum(x))
tpr$`FDR score` = fdr[,20]
tpr = tpr %>% rownames_to_column(name0)
# tpr1 = tpr[,c(1:9)]
# str(tpr1)
# tpr1$`TPR score` = apply(tpr.rank[,c(1:9)], 1, function(x) sum(x))
# tpr1$`FDR score` = fdr[,11]
# tpr2 = tpr[,c(10:18)]
# tpr2$`TPR score` = apply(tpr.rank[,c(10:18)], 1, function(x) sum(x))
# tpr2$`FDR score` = fdr[,21]
# tpr = merge(tpr1, tpr2, by = 0) %>% mutate(`Overall TPR` = `TPR score.y` + `TPR score.x`,`Overall FDR` = `FDR score.y` + `FDR score.x`)
tprscore = tpr[,c(1,20)] # extract for heatmap prepare
colnames(tpr) = gsub('\\..*','',colnames(tpr))
colnames(tpr)[1] = name0
tpr = tpr[order(tpr$`TPR score`, decreasing = T),]
colnames(tpr)[grep('FDR|TPR', colnames(tpr))] = c(" "," "," ")
rownames(tpr) = NULL
for(i in c(2:19)){
tpr[,i] = format(round(tpr[,i], digits = 2), nsmall = 2)
}
fdr = fdr %>% column_to_rownames(name0)
fdr = fdr[tpr[,1],] %>% rownames_to_column(name0)
if(filename %in% c('allC1','allD1','allC5','allD5','allC6','allD6','allC10')){
colnames(tpr)[1] = 'Effect size'
}
if(filename %in% c('allC2','allD2')){
colnames(tpr)[1] = 'Sample size'
}
if(filename %in% c('allC3','allD3')){
colnames(tpr)[1] = 'Depth'
}
if(filename %in% c('allC4','allD4')){
colnames(tpr)[1] = 'Taxa number'
}
if(filename %in% c('allC7','allD7')){
colnames(tpr)[1] = 'Depth confounding'
}
# for(i in c(2:10,12:20)){
#   tpr[[i]] <- ifelse(
#     fdr[[i]] =='***',
#     cell_spec(tpr[[i]], color = 'black', background=brewer.pal(11,'PiYG')[9], align = 'center'),
#     ifelse(
#       fdr[[i]] =='**',
#       cell_spec(tpr[[i]], color = 'black', background= brewer.pal(8,'Set2')[6], align = 'center'),
#       ifelse(
#         fdr[[i]] =='*',
#         cell_spec(tpr[[i]], color = 'black', background= brewer.pal(8,'RdGy')[2], align = 'center'),
#         cell_spec(tpr[[i]], color = 'black', background= brewer.pal(12,'Set3')[9], align = 'center'))))
# }
tpr[[20]] <- color_tile("white", brewer.pal(8,'Dark2')[1])(tpr[[20]])
tpr[[21]] <- color_tile("white", brewer.pal(8,'Dark2')[1])(tpr[[21]])
# tpr[[22]] <- color_tile("white", brewer.pal(8,'Dark2')[1])(tpr[[22]])
# tpr[[23]] <- color_tile("white", brewer.pal(8,'Dark2')[1])(tpr[[23]])
#
# tpr[[24]] <- color_tile("white", brewer.pal(8,'Dark2')[3])(tpr[[24]])
# tpr[[25]] <- color_tile("white", brewer.pal(8,'Dark2')[3])(tpr[[25]])
if(kable){
kbl(tpr, escape = F, align = 'c') %>%
kable_classic_2(full_width = F) %>%
add_header_above(c("Signal density" = 1, "5%" =3,"10%" = 3,"20%" =3,"5%" =3,"10%" = 3,"20%" =3,"TPR Score" = 1,"FDR Score" = 1), bold = T) %>%
add_header_above(c("Differential mode of taxa" = 1, "Abundant" =9,"Rare" = 9," " = 2), bold = T) %>%
row_spec(0,bold=TRUE)  %>%
column_spec(2, background= count.ct(data = fdr,2))%>%
column_spec(3, background= count.ct(data = fdr,3))%>%
column_spec(4, background= count.ct(data = fdr,4))%>%
column_spec(5, background= count.ct(data = fdr,5))%>%
column_spec(6, background= count.ct(data = fdr,6))%>%
column_spec(7, background= count.ct(data = fdr,7))%>%
column_spec(8, background= count.ct(data = fdr,8))%>%
column_spec(9, background= count.ct(data = fdr,9))%>%
column_spec(10, background= count.ct(data = fdr,10))%>%
column_spec(11, background= count.ct(data = fdr,11))%>%
column_spec(12, background= count.ct(data = fdr,12))%>%
column_spec(13, background= count.ct(data = fdr,13))%>%
column_spec(14, background= count.ct(data = fdr,14))%>%
column_spec(15, background= count.ct(data = fdr,15))%>%
column_spec(16, background= count.ct(data = fdr,16))%>%
column_spec(17, background= count.ct(data = fdr,17))%>%
column_spec(18, background= count.ct(data = fdr,18))%>%
column_spec(19, background= count.ct(data = fdr,19)) %>%
# column_spec(20, background= count.ct(data = fdr,20-1))%>%
# column_spec(21, background= count.ct(data = fdr,21-1)) %>%
column_spec(20, bold = T) %>%
column_spec(21, bold = T) %>%
# column_spec(22, bold = T)%>%
# column_spec(23, bold = T)%>%
# column_spec(24, bold = T)%>%
# column_spec(25, bold = T)%>%
# as_image(file = paste0(getwd(),'/plot/',covariate.type,'_',name1,'_TPR_kableTable.pdf'))
save_kable(file = paste0(output,filename,covariate.type,'_',type.name,'_TPR_kableTable.png'), zoom = 5)
}
## For kable of false discover FPs
if(summary.plot ==T & !(filename %in% c('allC0','allD0'))){
# dir.create('plot/SummaryPlot')
for(k in c('TPR','FDR')){
res3 = res2 %>% separate(iters, c('iter','m'),sep = '-') %>% dplyr::select(-m) %>% filter(measures == k & (methods %in% sub))
if(k =='FDR'){
res3[res3$measures=='FDR','value'] = (res3[res3$measures=='FDR','value'])
}
if(k =='TPR'){
res3[res3$measures=='TPR','value'] = -(res3[res3$measures=='TPR','value'])
}
res4 = res3 %>% dplyr::group_by(iter,!!as.name(name)) %>% mutate(rank=dense_rank(-value)) %>%
dplyr::select(c(name0,'label','methods','measures','rank','value'))
fac <- with(res4, reorder(label, -rank, stats::median, order = TRUE)) # higher order = higher power
res4$label <- factor(res4$label, levels = levels(fac))
p1 = ggplot(res4,aes(x = label, y = rank, fill= methods)) +
stat_boxplot(geom = "errorbar", width = 0.7,lwd=0.2) +
geom_boxplot(outlier.alpha = 0.5, outlier.size = 0.2, outlier.colour = 'grey') +
theme_bw() +
scale_fill_manual(values = cols) +
theme(axis.text.x = element_text(color="black", size =26),
axis.text.y = element_text(color="black", size = 26),
axis.title = element_text(color="black", size = 26),
strip.text = element_text(size = 26),
strip.background = element_rect(fill="white",color = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black",size= 1),
legend.position = 'none') +
ylab(paste('Rank of',k)) + xlab('') +
labs(title = paste0(type.name,'_',covariate.type))
ggsave(paste0(output,'SummaryPlot/',k,'_',filename,'_',covariate.type,'_oneplot_rank.pdf'), width = 8, height = 3, dpi = 100)
}
}
if('na' %in% res1$measures){
na.df <- res1 %>% filter(measures == measure2)
na.df[is.na(na.df$value),'value'] <- 0
na.df$value <- na.df$value *100
na.df1 = data_summary(na.df, formula = 'value~methods')
na.df1 <- na.df1[order(-na.df1$value),]
ord <- within(na.df1, methods <- factor(methods, levels=na.df1$methods))
if(na.plot){
na.plt <- ggplot(ord, aes(x = methods, y = value, fill = methods)) +
theme_bw() +
geom_bar(stat="identity",position = position_dodge2(width = 0.9, preserve = "single"),  width = 0.9) +
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.9, size = 0.2,
position=position_dodge2(.9, preserve = "single")) +
scale_fill_manual(values = cols) +
ylab('# NAs/ # tests, %') + xlab('') +
theme(axis.text.x = element_text(color="black", size =26, angle = 90, vjust = 0.95, hjust =1),
axis.text.y = element_text(color="black", size = 26),
axis.title = element_text(color="black", size = 30),
strip.text = element_text(size = 30),
strip.background = element_rect(fill="white",color = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black",size= 1),
legend.title=element_text(size=30),legend.position = 'none',
legend.text = element_text(size=30)) +
scale_y_continuous(trans = sqrt_trans(),
breaks = trans_breaks("sqrt", function(x) x^2),
labels = trans_format("sqrt", math_format(.x^2)))
ggsave(paste0(output,filename,covariate.type,'_','V35_PercentOfQvalNA.pdf'), width = 12, height = 10, dpi = 100)
}
}
if(filename == paste0(type,'0')){
plt1 <- ggplot(res.df2 %>% filter(measures == measure & (methods %in% sub) & covariate.types ==covariate.type) %>% droplevels(), aes(x = nOTUs, y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"), stat="identity", width = 0.7) +
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_fill_manual(values = cols1) +
geom_text(aes(y=0,label=label), position=position_dodge(width=0.7),size=6,vjust = 1.5) +
facet_grid(depth.conf.factors ~ nSams, scales = 'free_y',space = "free_x")+
ylab('FPs') + xlab('') +
labs(color = "Methods", title = paste0('Default: no differential taxa (',covariate.type,')'), fill = '')+
thw +
scale_y_continuous(trans = sqrt_trans(),
breaks = trans_breaks("sqrt", function(x) x^2),
labels = trans_format("sqrt", math_format(.x^2)))+
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size = 0.5) +
labs(title = paste0(type.name,'_',covariate.type))
ggsave(paste0(output,filename,covariate.type,'_','V35_part1_barplot.pdf'),  width = 30, height = 15, dpi = 100)
plt2 <- ggplot(res.df2 %>% filter(measures == measure & (methods %in% sub) & covariate.types ==covariate.type) %>% droplevels(), aes(x = nOTUs, y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"), stat="identity", width = 0.7) +
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_fill_manual(values = cols1) +
geom_text(aes(y=0,label=label), position=position_dodge(width=0.7),size=6,vjust = 1.5) +
facet_grid(depth.conf.factors ~ nSams, scales = 'free_y',space = "free_x")+
ylab('FPs') + xlab('') +
labs(color = "Methods", title = paste0('Default: no differential taxa (',covariate.type,')'), fill = '')+
thw +
scale_y_continuous(trans = sqrt_trans(),
breaks = trans_breaks("sqrt", function(x) x^2),
labels = trans_format("sqrt", math_format(.x^2)))+
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size = 0.5) +
labs(title = paste0(type.name,'_',covariate.type))
ggsave(paste0(output,filename,covariate.type,'_','V35_part2_barplot.pdf'),  width = 24, height = 15, dpi = 100)
}else{
# Pwer plot: lineplot(only for power), boxplot, barplot
if(lineplot){
size = 1.5
line1 <- ggplot(res.df2 %>% filter(measures == measure & !(methods %in% delete)&covariate.types ==covariate.type), aes(x = !!as.name(name0), y = value, colour = methods, group= methods)) +
theme_bw() +
geom_errorbar(aes(ymin=ymin, ymax=ymax,width=1), size = size,  position=position_dodge(0) ) +
geom_line(position=position_dodge(0), size = size) +
geom_point(position=position_dodge(0),size=size, shape=21, fill="white")+
facet_grid(as.formula(grid.formula), scales = 'free_y')+
scale_color_manual(values = cols) +
scale_y_continuous(limits = c(0,1),expand = c(0.1, 0, 0, 0)) +
labs(y = 'TPR', x = stri_trans_totitle(name), color = "Methods") +
thw
line11 <- ggplot(res.df2 %>% filter(measures == measure & (methods %in% sub)&covariate.types ==covariate.type), aes(x = !!as.name(name0), y = value, colour = methods,group= methods)) +
theme_bw() +
geom_errorbar(aes(ymin=ymin, ymax=ymax,width=1), size = size,  position=position_dodge(0) ) +
geom_line(position=position_dodge(0), size = size) +
geom_point(position=position_dodge(0),size=size, shape=21, fill="white")+
facet_grid(as.formula(grid.formula), scales = 'free_y')+
scale_color_manual(values = cols) +
scale_y_continuous(limits = c(0,1),expand = c(0.1, 0, 0, 0)) +
labs(y = 'TPR', x = stri_trans_totitle(name), color = "Methods") +
thw
line2 <- ggplot(res.df2 %>% filter(measures == measure1 & !(methods %in% delete)&covariate.types ==covariate.type), aes(x = !!as.name(name0), y = value, colour = methods, group= methods)) +
theme_bw() +
geom_errorbar(aes(ymin=ymin, ymax=ymax,width=1), size = size,  position=position_dodge(0) ) +
geom_line(position=position_dodge(0), size = size) +
geom_point(position=position_dodge(0),size=size, shape=21, fill="white")+
facet_grid(as.formula(grid.formula), scales = 'free_y')+
scale_color_manual(values = cols) +
scale_y_continuous(limits = c(0,1),expand = c(0.1, 0, 0, 0)) +
labs(y = 'TPR', x = stri_trans_totitle(name), color = "Methods") +
thw
line22 <- ggplot(res.df2 %>% filter(measures == measure1 & (methods %in% sub)&covariate.types ==covariate.type), aes(x = !!as.name(name0), y = value, colour = methods,group= methods)) +
theme_bw() +
geom_errorbar(aes(ymin=ymin, ymax=ymax,width=1), size = size,  position=position_dodge(0) ) +
geom_line(position=position_dodge(0), size = size) +
geom_point(position=position_dodge(0),size=size, shape=21, fill="white")+
facet_grid(as.formula(grid.formula), scales = 'free_y')+
scale_color_manual(values = cols) +
scale_y_continuous(limits = c(0,1),expand = c(0.1, 0, 0, 0)) +
labs(y = 'TPR', x = stri_trans_totitle(name), color = "Methods") +
thw
p =ggarrange(line1, line2, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'_','V35_line1.pdf'), width = 30, height = 40, dpi = 100)
p1 =ggarrange(line11, line22, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'_','V35_line2.pdf'), width = 30, height = 40, dpi = 100)
}
size = 6
if(barplot){
obj1 <- ggplot(res.df2 %>% filter(measures == measure & !(methods %in% delete)) %>% droplevels(), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"), stat="identity", width = 0.7) +
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_fill_manual(values = cols1) +
scale_y_continuous(limits = c(0,1),expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
labs(y = 'TPR', x = '', color = "", fill = '') +
thw +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5) +
labs(title = paste0(type.name,'_',covariate.type))
obj11 <- ggplot(res.df2 %>% filter(measures == measure & (methods %in% sub)) %>% droplevels(), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"), stat="identity", width = 0.7)+
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_y_continuous(limits = c(0,1), expand = c(0.1, 0, 0, 0)) +
scale_fill_manual(values = cols1) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
ylab('TPR') +
xlab('') +
labs(color = "", fill = '') +
thw +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)  +
labs(title = paste0(type.name,'_',covariate.type))
obj2 <- ggplot(res.df2 %>% filter(measures == measure1 & !(methods %in% delete)), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"),stat="identity", width = 0.7)+
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_fill_manual(values = cols1) +
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y') +
xlab('') +
ylab(ylab)+
labs(color = "", fill = '') +
guides(fill = FALSE)+thw+
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size =  0.5) +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)  +
labs(title = paste0(type.name,'_',covariate.type))
obj22 <- ggplot(res.df2 %>% filter(measures == measure1 & (methods %in% sub)), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"), stat="identity", width = 0.7)+
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_fill_manual(values = cols1) +
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
ylab(ylab) +
xlab('') +
labs(color = "", fill = '') +
guides(fill = FALSE)+thw+
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size =  0.5) +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)  +
labs(title = paste0(type.name,'_',covariate.type))
p =ggarrange(obj1, obj2, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'_','V35_part1.pdf'), width = 30, height = 30, dpi = 100)
p =ggarrange(obj11, obj22, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'_','V35_part2.pdf'),  width = 30, height = 30, dpi = 100)
tpr.plt <- ggplot(res.df2 %>% filter(measures == measure & (methods %in% sub)) %>% droplevels(), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"), stat="identity", width = 0.7) +
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_fill_manual(values = cols1) +
scale_y_continuous(limits = c(0,1),expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
labs(y = 'TPR', x = '', color = "", fill = '') +
thw +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5) +
labs(title = paste0(type.name,'_',covariate.type))
fdr.plt <- ggplot(res.df2 %>% filter(measures == measure1 & (methods %in% sub)), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
geom_bar(position = position_dodge2(width = 0.7, preserve = "single"),stat="identity", width = 0.7)+
geom_errorbar(aes(ymax=ymax, ymin=ymin, linetype = NULL),  width=0.7, size = 0.2,position=position_dodge2(.7, preserve = "single")) +
scale_fill_manual(values = cols1) +
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y') +
xlab('') +
ylab(ylab)+
labs(color = "", fill = '') +
guides(fill = FALSE)+thw+
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size =  0.5) +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)  +
labs(title = paste0(type.name,'_',covariate.type))
p =ggarrange(tpr.plt, fdr.plt, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'.pdf'),  width = 35, height = 30, dpi = 100)
}
if(boxplot){
box1 <- ggplot(res2 %>% filter(measures == measure & !(methods %in% delete)&covariate.types ==covariate.type) %>% droplevels(), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
stat_boxplot(geom = "errorbar", width = 0.7,lwd=0.1) +
geom_boxplot(width=0.7,outlier.size = 0, outlier.colour = 'grey30',lwd=0.1) +
# geom_boxjitter(outlier.color = NA, jitter.shape = 21, jitter.color = NA, jitter.height = 0.05, jitter.width = 0.075, errorbar.draw = TRUE)+
# geom_half_boxplot(position = position_dodge(width = 0.9),nudge = 0.05, outlier.color = NA) +
# geom_half_point(transformation = position_quasirandom(width = .9, groupOnX = TRUE)) +
scale_fill_manual(values = cols1) +
scale_color_manual(values = cols1) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
ylab('TPR') +
xlab('') +
labs(fill = '')+thw +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)
box11 <- ggplot(res2 %>% filter(measures == measure & (methods %in% sub)&covariate.types ==covariate.type) %>% droplevels(), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
stat_boxplot(geom = "errorbar", width = 0.7,lwd=0.1) +
geom_boxplot(width=0.7,outlier.size = 0.1, outlier.colour = 'grey30',lwd=0.1) +
scale_fill_manual(values = cols1) +
scale_color_manual(values = cols1) +
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
ylab('TPR') +
xlab('') +
labs(fill = '')+thw +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)
box2 <- ggplot(res2 %>% filter(measures == measure1 & !(methods %in% delete)&covariate.types ==covariate.type), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
stat_boxplot(geom = "errorbar", width = 0.7,lwd=0.1) +
geom_boxplot(width=0.7,outlier.size = 0.1, outlier.colour = 'grey30',lwd=0.1) +
scale_fill_manual(values = cols1) +
scale_color_manual(values = cols1) +
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
ylab(ylab) +
xlab('') +
labs(fill = '')+thw +
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size =  0.5) +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)
box22 <- ggplot(res2 %>% filter(measures == measure1 & (methods %in% sub)&covariate.types ==covariate.type), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
stat_boxplot(geom = "errorbar", width = 0.7,lwd=0.1) +
geom_boxplot(width=0.7,outlier.size = 0.1, outlier.colour = 'grey30',lwd=0.1) +
scale_fill_manual(values = cols1) +
scale_color_manual(values = cols1) +
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
ylab(ylab) +
xlab('') +
labs(fill = '')+thw +
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size =  0.5) +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)
p =ggarrange(box1, box2, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'_','V35_part1_box.pdf'),  width = 30, height = 30, dpi = 100)
p =ggarrange(box11, box22, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'_','V35_part2_box.pdf'), width = 30, height = 30, dpi = 100)
box1 <- ggplot(res2 %>% filter(measures == measure & (methods %in% sub)&covariate.types ==covariate.type) %>% droplevels(), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
stat_boxplot(geom = "errorbar", width = 0.7,lwd=0.1) +
geom_boxplot(width=0.7,outlier.size = 0, outlier.colour = 'grey30',lwd=0.1) +
# geom_boxjitter(outlier.color = NA, jitter.shape = 21, jitter.color = NA, jitter.height = 0.05, jitter.width = 0.075, errorbar.draw = TRUE)+
# geom_half_boxplot(position = position_dodge(width = 0.9),nudge = 0.05, outlier.color = NA) +
# geom_half_point(transformation = position_quasirandom(width = .9, groupOnX = TRUE)) +
scale_fill_manual(values = cols1) +
scale_color_manual(values = cols1) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
ylab('TPR') +
xlab('') +
labs(fill = '')+thw +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)
box2 <- ggplot(res2 %>% filter(measures == measure1 & (methods %in% sub)&covariate.types ==covariate.type), aes(x = !!as.name(name0), y = value,  fill = legend)) +
theme_bw() +
stat_boxplot(geom = "errorbar", width = 0.7,lwd=0.1) +
geom_boxplot(width=0.7,outlier.size = 0.1, outlier.colour = 'grey30',lwd=0.1) +
scale_fill_manual(values = cols1) +
scale_color_manual(values = cols1) +
scale_y_continuous(expand = c(0.1, 0, 0, 0)) +
facet_grid(as.formula(grid.formula), scales = 'free_y')+
ylab(ylab) +
xlab('') +
labs(fill = '')+thw +
geom_hline(yintercept = 1, colour = 'red', linetype = 'dashed', size =  0.5) +
geom_text(aes(y=0, label=label), position=position_dodge(width=0.7),size=size, vjust = 1.5)
p =ggarrange(box1, box2, nrow = 2,common.legend = T)
ggsave(paste0(output,filename,covariate.type,'_boxplot.pdf'),  width = 35, height = 30, dpi = 100)
}
}
return(list(na.sum = na.df1,
summary = summary, # does include the max(median TPR)) for heatmap score FDR and FPR
summary.TPR = summary.TPR, # include the max(median TPR)) for heatmap score TPR
res2 = res2,tprscore =tprscore,res.df2 = res.df2, tpr.rank = tpr.rank,
recommend = recommend,recommend2 = recommend2
))
}
c50b = plot_sim(filename = 'allC50',covariate.type = 'binary',type ='allC',MCC = F)
c10c = plot_sim(filename = 'allC10',covariate.type = 'continuous',type ='allC',MCC = F)
c50c = plot_sim(filename = 'allC50',covariate.type = 'continuous',type ='allC',MCC = F)
